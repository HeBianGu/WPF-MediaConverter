<h:MainWindow x:Class="HeBianGu.App.Converter.MainWindow"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
              xmlns:ffmpegenum="clr-namespace:FFMpegCore.Enums;assembly=FFMpegCore"
              xmlns:h="https://github.com/HeBianGu"
              xmlns:local="clr-namespace:HeBianGu.App.Converter"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
              xmlns:system="clr-namespace:System;assembly=netstandard"
              Width="1200"
              Height="750"
              h:Cattach.Icon=""
              h:Cattach.IconMargin="0"
              CaptionBackground="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}"
              CaptionForeground="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}"
              CaptionHeight="60"
              DataContext="{Binding Source={StaticResource S.DataSource.Locator}, Path=ShellViewModel}"
              IconSize="30"
              NotifyIconSource="/HeBianGu.General.WpfControlLib;component/Resources/logo.ico"
              mc:Ignorable="d">
    <h:Cattach.CaptionLeftTemplate>
        <ControlTemplate>
            <Border Width="206"
                    Margin="-3,0,0,0"
                    Background="{DynamicResource {x:Static h:BrushKeys.Dark0_2}}"
                    CornerRadius="{DynamicResource {x:Static h:CornerRadiusKeys.LeftTop}}">
                <DockPanel Margin="0,0,0,-2">
                    <Image Height="40"
                           Margin="20,10,5,0"
                           VerticalAlignment="Bottom"
                           Style="{DynamicResource {x:Static h:ImageKeys.Logo}}" />
                    <DockPanel HorizontalAlignment="Left" VerticalAlignment="Bottom">
                        <TextBlock Margin="0,2"
                                   DockPanel.Dock="Top"
                                   FontSize="{DynamicResource {x:Static h:FontSizeKeys.Header4}}"
                                   Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}"
                                   Text="H视频转换器" />
                        <TextBlock Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" Text="专注硬件参数" TextWrapping="Wrap" />
                        <!--<TextBlock Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" Text="{Binding Source={x:Static h:ComputerViewPresenter.Instance}, Path=OSDescription}" TextWrapping="Wrap" />-->
                    </DockPanel>
                </DockPanel>
                <h:Interaction.Behaviors>
                    <h:DragMoveWindowBehavior />
                </h:Interaction.Behaviors>
            </Border>
        </ControlTemplate>
    </h:Cattach.CaptionLeftTemplate>
    <Window.Resources>
        <DataTemplate DataType="{x:Type ffmpegenum:ContainerFormat}">
            <TextBlock>
                <Run Text="{Binding Name, Mode=OneWay}" />
                <Run Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" Text="{Binding Extension, Mode=OneWay}" />
                <Run Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" Text="{Binding Description, Mode=OneWay}" />
                <Run Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" Text="{Binding DemuxingSupported, Mode=OneWay}" />
                <Run Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" Text="{Binding MuxingSupported, Mode=OneWay}" />
            </TextBlock>
        </DataTemplate>

        <DataTemplate DataType="{x:Type ffmpegenum:Codec}">
            <TextBlock TextTrimming="CharacterEllipsis" TextWrapping="NoWrap">
                <Run Text="{Binding Name, Mode=OneWay}" />
                <Run Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" Text="{Binding Type, Mode=OneWay}" />
                <Run Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" Text="{Binding Description, Mode=OneWay}" />
            </TextBlock>
        </DataTemplate>

        <DataTemplate DataType="{x:Type ffmpegenum:PixelFormat}">
            <TextBlock>
                <Run Text="{Binding Name, Mode=OneWay}" />
                <Run Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" Text="{Binding BitsPerPixel, Mode=OneWay}" />
                <Run Foreground="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" Text="{Binding Components, Mode=OneWay}" />
            </TextBlock>
        </DataTemplate>

    </Window.Resources>

    <TabControl h:Cattach.AttachDock="Top"
                h:Cattach.CaptionBackground="{DynamicResource {x:Static h:BrushKeys.Dark0_2}}"
                h:Cattach.CaptionVerticalAlignment="Stretch"
                h:Cattach.CornerRadius="0" 
                h:Cattach.UseSearch="False"
                BorderThickness="0"
                ItemsSource="{Binding Collection}"
                SelectedItem="{Binding SelectedItem}"
                Style="{DynamicResource {x:Static h:TabControlKeys.Line}}"
                TabStripPlacement="Left">
        <h:Cattach.AttachContent>
            <ControlTemplate>
                <Border Height="30">
                    <Separator Margin="20,0" Background="{DynamicResource {x:Static h:BrushKeys.Dark0_6}}" Style="{DynamicResource {x:Static h:SeparatorKeys.Default}}" />
                </Border>
            </ControlTemplate>
        </h:Cattach.AttachContent>
        <TabControl.ItemContainerStyle>
            <Style BasedOn="{StaticResource {x:Static h:TabItemKeys.Line}}" TargetType="TabItem">
                <Setter Property="Width" Value="200" />
                <Setter Property="h:Cattach.IconMargin" Value="20 0 10 0" />
                <Setter Property="h:Cattach.Icon" Value="{x:Static h:Icons.Clock}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Dark0_2}}" />
                <Setter Property="Header" Value="{Binding Name}" />
                <Setter Property="h:Cattach.Icon" Value="{Binding Icon}" />
                <Setter Property="h:Cattach.IconSize" Value="15" />
                <Setter Property="h:Cattach.UseGuide" Value="True" />
                <Setter Property="h:VipAttach.Level" Value="{Binding Vip}"/>
                <Setter Property="h:Cattach.Behaviors">
                    <Setter.Value>
                        <h:Behaviors>
                            <h:LoadedAdornerBehavior AdornerType="{x:Type h:VipAdorner}"/>
                        </h:Behaviors>
                    </Setter.Value>
                </Setter>
            </Style>
        </TabControl.ItemContainerStyle>
        <h:Interaction.Triggers>
            <h:EventTrigger EventName="Loaded">
                <h:InvokeCommandAction Command="{Binding LoadedCommand}" />
            </h:EventTrigger>
        </h:Interaction.Triggers>
        <!--<TabControl.ContentTemplate>
            <DataTemplate>
                <DockPanel>
                    <UniformGrid DockPanel.Dock="Top" Columns="2" Rows="1">
                        <Border Style="{DynamicResource {x:Static h:BorderKeys.Card}}">
                            <UniformGrid Height="80" Columns="2" HorizontalAlignment="Center" Rows="1">
                                <TextBlock Text="全开" FontSize="40" VerticalAlignment="Center"/>
                                <h:SwitchToggleButton IsChecked="{Binding Bool1}"/>
                            </UniformGrid>
                        </Border>
                        <Border Style="{DynamicResource {x:Static h:BorderKeys.Card}}">
                            <UniformGrid Height="80" Columns="2" HorizontalAlignment="Center" Rows="1">
                                <TextBlock Text="全关" FontSize="40" VerticalAlignment="Center"/>
                                <h:SwitchToggleButton IsChecked="{Binding Bool1}"/>
                            </UniformGrid>
                        </Border>
                    </UniformGrid>
                    <Separator DockPanel.Dock="Top" Margin="10"/>
                    <ItemsControl>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Style="{DynamicResource {x:Static h:BorderKeys.Card}}">
                                    <UniformGrid Height="80" Columns="2" HorizontalAlignment="Center" Rows="1">
                                        <TextBlock Text="{Binding Value}" FontSize="20" VerticalAlignment="Center"/>
                                        <h:SwitchToggleButton IsChecked="{Binding Bool1}"/>
                                    </UniformGrid>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid VerticalAlignment="Top" Columns="4"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <h:TestViewModel Value="客厅" Bool1="True"/>
                        <h:TestViewModel Value="厨房" Bool1="False"/>
                        <h:TestViewModel Value="卧室" Bool1="True"/>
                        <h:TestViewModel Value="阳台" Bool1="False"/>
                        <h:TestViewModel Value="卫生间1" Bool1="False"/>
                        <h:TestViewModel Value="卫生间2" Bool1="False"/>
                        <h:TestViewModel Value="客厅" Bool1="True"/>
                        <h:TestViewModel Value="厨房" Bool1="False"/>
                        <h:TestViewModel Value="卧室" Bool1="True"/>
                        <h:TestViewModel Value="阳台" Bool1="False"/>
                        <h:TestViewModel Value="卫生间1" Bool1="False"/>
                        <h:TestViewModel Value="卫生间2" Bool1="False"/>
                        <h:TestViewModel Value="客厅" Bool1="True"/>
                        <h:TestViewModel Value="厨房" Bool1="False"/>
                        <h:TestViewModel Value="卧室" Bool1="True"/>
                        <h:TestViewModel Value="阳台" Bool1="False"/>
                        <h:TestViewModel Value="卫生间1" Bool1="False"/>
                        <h:TestViewModel Value="卫生间2" Bool1="False"/>
                        <h:TestViewModel Value="客厅" Bool1="True"/>
                        <h:TestViewModel Value="厨房" Bool1="False"/>
                        <h:TestViewModel Value="卧室" Bool1="True"/>
                        <h:TestViewModel Value="阳台" Bool1="False"/>
                        <h:TestViewModel Value="卫生间1" Bool1="False"/>
                        <h:TestViewModel Value="卫生间2" Bool1="False"/>
                    </ItemsControl>
                </DockPanel>
            </DataTemplate>
        </TabControl.ContentTemplate>-->


        <!--<StackPanel>
        <h:PropertyGrid x:Name="p" UseGroup="True">
            <h:PropertyGrid.SelectObject>
                <h:Student/>
            </h:PropertyGrid.SelectObject>
            <ItemsControl.GroupStyle>
                <GroupStyle ContainerStyle="{StaticResource {x:Static h:GroupItemKeys.GroupTitle}}">
                    <GroupStyle.Panel>
                        <ItemsPanelTemplate>
                            <DataGridRowsPresenter />
                        </ItemsPanelTemplate>
                    </GroupStyle.Panel>
                </GroupStyle>
            </ItemsControl.GroupStyle>
        </h:PropertyGrid>

        <ItemsControl ItemsSource="{Binding ElementName=p,Path=ItemsSource}">
            <ItemsControl.GroupStyle>
                <GroupStyle ContainerStyle="{StaticResource {x:Static h:GroupItemKeys.GroupTitle}}">
                    <GroupStyle.Panel>
                        <ItemsPanelTemplate>
                            <DataGridRowsPresenter />
                        </ItemsPanelTemplate>
                    </GroupStyle.Panel>
                </GroupStyle>
            </ItemsControl.GroupStyle>
        </ItemsControl>
    </StackPanel>-->
    </TabControl>
</h:MainWindow>
