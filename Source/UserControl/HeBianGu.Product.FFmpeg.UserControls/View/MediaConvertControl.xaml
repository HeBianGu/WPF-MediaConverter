<UserControl x:Class="HeBianGu.Product.FFmpeg.UserControls.MediaConvertControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HeBianGu.Product.FFmpeg.UserControls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
             xmlns:base="clr-namespace:HeBianGu.Base.WpfBase;assembly=HeBianGu.Base.WpfBase"
             xmlns:wpfcontrollib="clr-namespace:HeBianGu.General.WpfControlLib;assembly=HeBianGu.General.WpfControlLib"
             xmlns:media="clr-namespace:HeBianGu.Product.General.MediaPlayer;assembly=HeBianGu.Product.General.MediaPlayer"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="1200">
    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <!--自定义资源引用-->
                <ResourceDictionary Source="/HeBianGu.Base.WpfBase;component/Themes/HeBianGu.Themes.Resource.xaml"/>
                <ResourceDictionary Source="/HeBianGu.Base.WpfBase;component/Themes/Color/LightThemeResource.xaml"/>
                <ResourceDictionary Source="/HeBianGu.General.WpfControlLib;component/Themes/HeBianGu.Themes.Default.xaml"/>
                
            </ResourceDictionary.MergedDictionaries>


            <Style TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0,0"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="{DynamicResource NormalTextForeground}"/>
            </Style>

            <Style TargetType="{x:Type RadioButton}">
                <Setter Property="Width" Value="60"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="5,0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Width" Value="200"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0,0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <DataTemplate DataType="{x:Type local:MediaEntityViewModel}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="{Binding Name}" Grid.Row="0" Grid.Column="1"/>
                    <TextBlock Text="文件名称：" Grid.Row="0" Grid.Column="0"/>

                    <TextBlock Text="{Binding FullPath}"  Grid.Row="1"  Grid.Column="1"/>
                    <TextBlock Text="文件路径："  Grid.Row="1"  Grid.Column="0"/>

                    <TextBlock Text="{Binding Duration}"  Grid.Row="2"  Grid.Column="1"/>
                    <TextBlock Text="文件时长："  Grid.Row="2"  Grid.Column="0"/>

                    <TextBlock Text="{Binding Size}"  Grid.Row="3"  Grid.Column="1"/>
                    <TextBlock Text="文件大小："  Grid.Row="3"  Grid.Column="0"/>

                    <TextBlock Text="{Binding MediaCode}"  Grid.Row="4"  Grid.Column="1"/>
                    <TextBlock Text="编码格式："  Grid.Row="4"  Grid.Column="0"/>

                    <TextBlock Text="{Binding MediaType}"  Grid.Row="5"  Grid.Column="1"/>
                    <TextBlock Text="视频格式："  Grid.Row="5"  Grid.Column="0"/>

                    <TextBlock Text="{Binding Bitrate}"  Grid.Row="6"  Grid.Column="1"/>
                    <TextBlock Text="比特率："  Grid.Row="6"  Grid.Column="0"/>

                    <TextBlock Text="{Binding Resoluction}"  Grid.Row="7"  Grid.Column="1"/>
                    <TextBlock Text="分辨率："  Grid.Row="7"  Grid.Column="0"/>

                    <TextBlock Text="{Binding Start}"  Grid.Row="8"  Grid.Column="1"/>
                    <TextBlock Text="开始时间："  Grid.Row="8"  Grid.Column="0"/>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="{x:Type local:MediaConvertEntityNotifyClass}">

                <Grid ClipToBounds="False"  Background="{DynamicResource S_GrayLightOpacity}" 
                  Height="90" IsEnabled="{Binding IsBuzy,Converter={x:Static base:XConverter.TrueToFalseConverter}}"
                  Width="{Binding RelativeSource={RelativeSource AncestorType=ListBox},Path=ActualWidth}">

                    <Grid Margin="5,5,25,5" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition/>
                            <ColumnDefinition  Width="100"/>
                            <ColumnDefinition  Width="200"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Column="0" Margin="5,2" >
                            <!--<MediaElement Source="{Binding From.FullPath}" LoadedBehavior="Pause" ScrubbingEnabled="True"/>
                            <wpfcontrollib:FButton Style="{StaticResource FButton_Transparency}"  FIcon="&#xe74a;" FIconSize="40"/>-->
                            <MediaElement x:Name="media_smarl" Source="{Binding From.FullPath}"/>
                            <!--<wpfcontrollib:FButton Style="{StaticResource FButton_Transparency}" Command="{x:Static MediaCommands.Pause}" CommandTarget="{Binding ElementName=media_smarl}" FIcon="&#xe74a;" FIconSize="40"/>-->

                        </Grid>

                        <Grid Grid.Column="1"  ToolTip="{Binding From}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.6*"/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1.8*"/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <TextBox HorizontalAlignment="Left" Text="{Binding From.Name}" Grid.Row="0" Grid.ColumnSpan="6"  IsEnabled="False"/>

                            <TextBlock HorizontalAlignment="Left"  TextBlock.FontWeight="Bold" Text="格式：" Grid.Row="1" Grid.Column="0"/>
                            <TextBlock HorizontalAlignment="Left"    Text="{Binding From.MediaType}" Grid.Row="1" Grid.Column="1"/>

                            <TextBlock HorizontalAlignment="Right"  TextBlock.FontWeight="Bold"  Text="分辨率：" Grid.Row="1" Grid.Column="2"/>
                            <TextBlock HorizontalAlignment="Left" Text="{Binding From.Resoluction}" Grid.Row="1" Grid.Column="3"/>

                            <TextBlock HorizontalAlignment="Left"  TextBlock.FontWeight="Bold"  Text="长度：" Grid.Row="2" Grid.Column="0"/>
                            <TextBlock HorizontalAlignment="Left" Text="{Binding From.Duration}" Grid.Row="2" Grid.Column="1"/>

                            <TextBlock  HorizontalAlignment="Right"  TextBlock.FontWeight="Bold"  Text="大小：" Grid.Row="2" Grid.Column="2"/>
                            <TextBlock  HorizontalAlignment="Left" Text="{Binding From.Size}" Grid.Row="2" Grid.Column="3"/>
                        </Grid>

                        <Grid Grid.Column="2">
                            <TextBlock Text="&#xeafe;" 
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center" 
                                   Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   Style="{StaticResource FIcon}"
                                   FontSize="50">
                                <TextBlock.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </TextBlock.RenderTransform>
                                <TextBlock.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                                    <SplineDoubleKeyFrame KeyTime="00:00:01.5" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>

                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-50"/>
                                                    <SplineDoubleKeyFrame KeyTime="00:00:01.5" Value="20"/>
                                                </DoubleAnimationUsingKeyFrames>

                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(TextBlock.FontSize)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="30"/>
                                                    <SplineDoubleKeyFrame KeyTime="00:00:01.5" Value="50"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </TextBlock.Triggers>
                            </TextBlock>
                        </Grid>

                        <Grid Grid.Column="3" ToolTip="{Binding To}">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.6*"/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1.5*"/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <TextBox HorizontalAlignment="Left" Text="{Binding To.Name,UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.ColumnSpan="6"/>

                            <TextBlock HorizontalAlignment="Left"  TextBlock.FontWeight="Bold" Text="格式：" Grid.Row="1" Grid.Column="0"/>
                            <TextBlock HorizontalAlignment="Left" Text="{Binding To.MediaType}" Grid.Row="1" Grid.Column="1"/>

                            <TextBlock HorizontalAlignment="Right"  TextBlock.FontWeight="Bold" Text="分辨率：" Grid.Row="1" Grid.Column="2"/>
                            <TextBlock HorizontalAlignment="Left" Text="{Binding To.Resoluction}" Grid.Row="1" Grid.Column="3"/>

                            <TextBlock HorizontalAlignment="Left"  TextBlock.FontWeight="Bold" Text="长度：" Grid.Row="2" Grid.Column="0"/>
                            <TextBlock HorizontalAlignment="Left" Text="{Binding To.Duration}" Grid.Row="2" Grid.Column="1"/>

                            <TextBlock  HorizontalAlignment="Right"  TextBlock.FontWeight="Bold" Text="大小：" Grid.Row="2" Grid.Column="2"/>
                            <TextBlock  HorizontalAlignment="Left" Text="{Binding To.Size}" Grid.Row="2" Grid.Column="3"/>
                        </Grid>

                        <Grid Grid.Column="4">

                            <ToggleButton x:Name="toggle_config"  IsChecked="False"
                                      Style="{StaticResource FIconToggleButton}" Content="参数设置" FontSize="20"  Foreground="Black"
                                      base:ControlAttachProperty.FIcon="&#xe79c;"  Height="30" >
                            </ToggleButton>

                            <Popup x:Name="Pop" PopupAnimation="Slide" IsOpen="{Binding ElementName=toggle_config,Path=IsChecked}"  
                               PlacementTarget="{Binding ElementName=toggle_config}" 
                               Placement="Bottom" AllowsTransparency="True"
                               StaysOpen="False" HorizontalAlignment="Left" 
                               VerticalAlignment="Bottom">
                                <Border Background="{DynamicResource S_OpacityGray}" 
                                    CornerRadius="5" 
                                    BorderBrush="{DynamicResource S_AccentBrush}" BorderThickness="1">
                                    <StackPanel Margin="10">
                                        <local:MediaConvertConfig Width="400" CommandString="{Binding CmdParams,Mode=TwoWay}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="SumitClick">
                                                    <i:InvokeCommandAction  Command="{Binding RelayCommand}"  CommandParameter="config_btn_sumit"/>
                                                    <ei:ChangePropertyAction TargetObject="{Binding ElementName=toggle_config}" PropertyName="IsChecked" Value="false"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </local:MediaConvertConfig>
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </Grid>

                        <Grid Grid.Column="5">
                            <wpfcontrollib:FButton Content="{Binding CmdState}" 
                                               Command="{Binding RelayCommand}" 
                                               CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=Content}"  
                                               Height="50"  FIconSize="30" FontSize="20" FIcon=""
                                               Width="150"/>
                        </Grid>

                        <ProgressBar Grid.Row="1" IsHitTestVisible="False" Value="{Binding ProgressValue}" Height="5"
                                 Visibility="{Binding IsBuzy,Converter={x:Static base:XConverter.BooleanToVisibilityConverter}}" 
                                 Foreground="{DynamicResource S_AccentBrush}"  Grid.ColumnSpan="7"/>

                    </Grid>

                    <wpfcontrollib:FButton FIcon="&#xe702;" Margin="0,-8"
                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected,Converter={x:Static base:XConverter.BooleanToVisibilityConverter}}"
                                       Style="{StaticResource FButton_Transparency}" 
                                       HorizontalAlignment="Right" 
                                       Foreground="White" 
                                       FIconSize="30" Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext.RelayCommand}" CommandParameter="btn_delete_current"
                                       VerticalAlignment="Top"/>
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="367*"/>
            <RowDefinition Height="80"/>
        </Grid.RowDefinitions>

        <DockPanel>
            <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Width" Value="100"/>
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="5,0"/>
                    </Style>

                </StackPanel.Resources>
                <wpfcontrollib:FButton FIcon="&#xebce;" Content="视频转换" Margin="10,0" Command="{Binding RelayCommand}" CommandParameter="AddFile"/>
                <!--<wpfcontrollib:FButton  FIcon="&#xe611;"   Content="添加文件夾" Margin="10,0" />-->
                <wpfcontrollib:FButton  FIcon="&#xe61e;" Content="视频分割" Margin="10,0">
                    <i:Interaction.Triggers>
                        <!--点击模块-->
                        <i:EventTrigger EventName="Click">
                            <ei:ChangePropertyAction TargetObject="{Binding ElementName=control_mediasplit}" PropertyName="Visibility" Value="Visible"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </wpfcontrollib:FButton>
                <!--<wpfcontrollib:FButton  FIcon="&#xe611;"   Content="視頻合并" Margin="10,0" />-->
                <!--<wpfcontrollib:FButton  FIcon="&#xe606;"   Content="製作GIF" Margin="10,0" />-->
                <wpfcontrollib:FButton  FIcon="&#xe606;"   Content="模板设置" Margin="10,0" />
                <wpfcontrollib:FButton  FIcon="&#xe606;"  Width="150" Content="FFmpeg参数设置" Margin="10,0" />
            </StackPanel>
        </DockPanel>

        <DockPanel Grid.Row="2">
            <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">

                <wpfcontrollib:FTextBox Width="500" Height="30" Margin="3"  
                                        base:ControlAttachProperty.Label="保存路径"
                                        Style="{StaticResource LabelOpenFolderTextBox}"/>
            </StackPanel>

            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Width" Value="100"/>
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="5,0"/>
                    </Style>
                </StackPanel.Resources>
                <wpfcontrollib:FButton FIcon="&#xe70d;" Content="清空列表" Command="{Binding RelayCommand}" CommandParameter="btn_clear_all"/>
                <wpfcontrollib:FButton Content="开始转换" CornerRadius="25" FontSize="20" FIcon="&#xe690;" Margin="50,0" Width="150" Height="50"/>
            </StackPanel>
        </DockPanel>

        <ListBox Grid.Row="1" BorderThickness="0" Margin="5"  Background="{DynamicResource S_OpacityGray}" ClipToBounds="False"
                 ItemsSource="{Binding Collection}"   SelectedItem="{Binding Current}"
                 ScrollViewer.HorizontalScrollBarVisibility="Hidden">
        </ListBox>

        <local:MediaSplitControl x:Name="control_mediasplit" 
                                 Grid.RowSpan="3" 
                                 Visibility="Collapsed"
                                 StartTime="{Binding SplitParamater.StartTime,Mode=TwoWay}"
                                 EndTime="{Binding SplitParamater.EndTime,Mode=TwoWay}"
                                 FilePath="{Binding SplitParamater.FilePath,Mode=TwoWay}">
            <i:Interaction.Triggers>
                <!--点击模块-->
                <i:EventTrigger EventName="SumitClick">
                    <i:InvokeCommandAction Command="{Binding RelayCommand}"  CommandParameter="split_SumitClick"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </local:MediaSplitControl>

    </Grid>
</UserControl>
